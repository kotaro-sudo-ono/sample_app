@startuml
package Presentation{
    class UserController {
        + registerUser(user: User):void
    }
}

package Dmain{
    package Entity{
    class User{
    - Long userId
    - String userName
    - String email
    - String userRole
    - Long recordId
    - Long teamMemberId
    }
    }
package Repository{
interface UserRegistrationRepository {
    + register(user: User): void
}
}

}
package UseCase{
    class UserRegistrationRepositoryUseCase{
     + register(user: User): void
    }
}
package Interface{
        package ORMEntity {
    class ORMUser{
    - Long userId
    - String userName
    - String email
    - String userRole
    - Long recordId
    - Long teamMemberId
    }
}
    package Mapper{
    interface UserRepositoryMapper{
        + save(user: User):User
        + findByEmail(email: String):User
    }
    }

package i_Repository {
    class UserRepositoryImpl{
        + save(user: User):User
        + findByEmail(email: String):User
    }
}


}


' Relations
UserController -> UserRegistrationRepositoryUseCase
UserRegistrationRepositoryUseCase -> UserRegistrationRepository
UserRegistrationRepository -> User
UserRepositoryImpl --> UserRegistrationRepository
UserRepositoryImpl -> UserRepositoryMapper
UserRepositoryMapper -> ORMUser
@enduml